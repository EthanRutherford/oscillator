{"entry":"/index.js","files":{"factory.js":{"/code":"\"use strict\";function identity(t){return t}function factory(t,e,n){function o(t,e,n){for(var o in e)e.hasOwnProperty(o)&&warning(\"function\"==typeof e[o],\"%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.\",t.displayName||\"ReactClass\",ReactPropTypeLocationNames[n],o)}function i(t,e){var n=m.hasOwnProperty(e)?m[e]:null;_.hasOwnProperty(e)&&_invariant(\"OVERRIDE_BASE\"===n,\"ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.\",e),t&&_invariant(\"DEFINE_MANY\"===n||\"DEFINE_MANY_MERGED\"===n,\"ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.\",e)}function a(t,n){if(n){_invariant(\"function\"!=typeof n,\"ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object.\"),_invariant(!e(n),\"ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.\");var o=t.prototype,a=o.__reactAutoBindPairs;n.hasOwnProperty(MIXINS_KEY)&&y.mixins(t,n.mixins);for(var s in n)if(n.hasOwnProperty(s)&&s!==MIXINS_KEY){var r=n[s],u=o.hasOwnProperty(s);if(i(u,s),y.hasOwnProperty(s))y[s](t,r);else{var l=m.hasOwnProperty(s);if(\"function\"==typeof r&&!l&&!u&&!1!==n.autobind)a.push(s,r),o[s]=r;else if(u){var d=m[s];_invariant(l&&(\"DEFINE_MANY_MERGED\"===d||\"DEFINE_MANY\"===d),\"ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.\",d,s),\"DEFINE_MANY_MERGED\"===d?o[s]=c(o[s],r):\"DEFINE_MANY\"===d&&(o[s]=p(o[s],r))}else o[s]=r,\"function\"==typeof r&&n.displayName&&(o[s].displayName=n.displayName+\"_\"+s)}}}else{var h=typeof n;warning(\"object\"===h&&null!==n,\"%s: You're attempting to include a mixin that is either null or not an object. Check the mixins included by the component, as well as any mixins they include themselves. Expected object but got %s.\",t.displayName||\"ReactClass\",null===n?null:h)}}function s(t,e){if(e)for(var n in e){var o=e[n];e.hasOwnProperty(n)&&(_invariant(!(n in y),'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.',n),_invariant(!(n in t),\"ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.\",n),t[n]=o)}}function r(t,e){_invariant(t&&e&&\"object\"==typeof t&&\"object\"==typeof e,\"mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.\");for(var n in e)e.hasOwnProperty(n)&&(_invariant(void 0===t[n],\"mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.\",n),t[n]=e[n]);return t}function c(t,e){return function(){var n=t.apply(this,arguments),o=e.apply(this,arguments);if(null==n)return o;if(null==o)return n;var i={};return r(i,n),r(i,o),i}}function p(t,e){return function(){t.apply(this,arguments),e.apply(this,arguments)}}function u(t,e){var n=e.bind(t);n.__reactBoundContext=t,n.__reactBoundMethod=e,n.__reactBoundArguments=null;var o=t.constructor.displayName,i=n.bind;return n.bind=function(a){for(var s=arguments.length,r=Array(s>1?s-1:0),c=1;c<s;c++)r[c-1]=arguments[c];if(a!==t&&null!==a)warning(!1,\"bind(): React component methods may only be bound to the component instance. See %s\",o);else if(!r.length)return warning(!1,\"bind(): You are binding a component method to the component. React does this for you automatically in a high-performance way, so you can safely remove this call. See %s\",o),n;var p=i.apply(n,arguments);return p.__reactBoundContext=t,p.__reactBoundMethod=e,p.__reactBoundArguments=r,p},n}function l(t){for(var e=t.__reactAutoBindPairs,n=0;n<e.length;n+=2){var o=e[n],i=e[n+1];t[o]=u(t,i)}}var d=[],m={mixins:\"DEFINE_MANY\",statics:\"DEFINE_MANY\",propTypes:\"DEFINE_MANY\",contextTypes:\"DEFINE_MANY\",childContextTypes:\"DEFINE_MANY\",getDefaultProps:\"DEFINE_MANY_MERGED\",getInitialState:\"DEFINE_MANY_MERGED\",getChildContext:\"DEFINE_MANY_MERGED\",render:\"DEFINE_ONCE\",componentWillMount:\"DEFINE_MANY\",componentDidMount:\"DEFINE_MANY\",componentWillReceiveProps:\"DEFINE_MANY\",shouldComponentUpdate:\"DEFINE_ONCE\",componentWillUpdate:\"DEFINE_MANY\",componentDidUpdate:\"DEFINE_MANY\",componentWillUnmount:\"DEFINE_MANY\",updateComponent:\"OVERRIDE_BASE\"},y={displayName:function(t,e){t.displayName=e},mixins:function(t,e){if(e)for(var n=0;n<e.length;n++)a(t,e[n])},childContextTypes:function(t,e){o(t,e,\"childContext\"),t.childContextTypes=_assign({},t.childContextTypes,e)},contextTypes:function(t,e){o(t,e,\"context\"),t.contextTypes=_assign({},t.contextTypes,e)},getDefaultProps:function(t,e){t.getDefaultProps?t.getDefaultProps=c(t.getDefaultProps,e):t.getDefaultProps=e},propTypes:function(t,e){o(t,e,\"prop\"),t.propTypes=_assign({},t.propTypes,e)},statics:function(t,e){s(t,e)},autobind:function(){}},h={componentDidMount:function(){this.__isMounted=!0}},f={componentWillUnmount:function(){this.__isMounted=!1}},_={replaceState:function(t,e){this.updater.enqueueReplaceState(this,t,e)},isMounted:function(){return warning(this.__didWarnIsMounted,\"%s: isMounted is deprecated. Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.\",this.constructor&&this.constructor.displayName||this.name||\"Component\"),this.__didWarnIsMounted=!0,!!this.__isMounted}},E=function(){};return _assign(E.prototype,t.prototype,_),function(t){var e=identity(function(t,o,i){warning(this instanceof e,\"Something is calling a React component directly. Use a factory or JSX instead. See: https://fb.me/react-legacyfactory\"),this.__reactAutoBindPairs.length&&l(this),this.props=t,this.context=o,this.refs=emptyObject,this.updater=i||n,this.state=null;var a=this.getInitialState?this.getInitialState():null;void 0===a&&this.getInitialState._isMockFunction&&(a=null),_invariant(\"object\"==typeof a&&!Array.isArray(a),\"%s.getInitialState(): must return an object or null\",e.displayName||\"ReactCompositeComponent\"),this.state=a});e.prototype=new E,e.prototype.constructor=e,e.prototype.__reactAutoBindPairs=[],d.forEach(a.bind(null,e)),a(e,h),a(e,t),a(e,f),e.getDefaultProps&&(e.defaultProps=e.getDefaultProps()),e.getDefaultProps&&(e.getDefaultProps.isReactClassApproved={}),e.prototype.getInitialState&&(e.prototype.getInitialState.isReactClassApproved={}),_invariant(e.prototype.render,\"createClass(...): Class specification must implement a `render` method.\"),warning(!e.prototype.componentShouldUpdate,\"%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.\",t.displayName||\"A component\"),warning(!e.prototype.componentWillRecieveProps,\"%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\",t.displayName||\"A component\");for(var o in m)e.prototype[o]||(e.prototype[o]=null);return e}}var _assign=require(\"object-assign\"),emptyObject=require(\"fbjs/lib/emptyObject\"),_invariant=require(\"fbjs/lib/invariant\"),warning=require(\"fbjs/lib/warning\"),MIXINS_KEY=\"mixins\",ReactPropTypeLocationNames;ReactPropTypeLocationNames={prop:\"prop\",context:\"context\",childContext:\"child context\"},module.exports=factory;"}},"/deps":["object-assign","fbjs"]}